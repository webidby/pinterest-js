import { getBoards, addBoard, getBoardByName, addPinToBoard } from './storage.js';

const boardSelect = document.getElementById('boardSelect');
const newBoardInput = document.getElementById('newBoardName');
const createBoardBtn = document.getElementById('createBoardBtn');
const pinsContainer = document.querySelector('.pins-container');

const PINS_API_URL = 'https://681294a3129f6313e20effc5.mockapi.io/api/v1/pins';

// –†–µ–Ω–¥–µ—Ä –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –¥–æ—Å–æ–∫
function renderBoardOptions() {
    const boards = getBoards();
    boardSelect.innerHTML = '';
    boards.forEach(board => {
        const opt = document.createElement('option');
        opt.value = board.name;
        opt.textContent = board.name;
        boardSelect.appendChild(opt);
    });
}

// –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ—Å–∫–∏
createBoardBtn.addEventListener('click', () => {
    const name = newBoardInput.value.trim();
    if (name) {
        addBoard(name);
        renderBoardOptions();
        newBoardInput.value = '';
    }
});

// –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∏–Ω–æ–≤ —Å mockapi
async function loadPins() {
    try {
        const res = await fetch(PINS_API_URL);
        const pins = await res.json();

        pinsContainer.innerHTML = '';
        pins.forEach(pin => {
            const el = document.createElement('div');
            el.className = 'pin';
            el.innerHTML = `
        <img src="${pin.image}" alt="${pin.title}">
        <div class="pin-description">${pin.title}</div>
        <button class="circle-btn" data-id="${pin.id}">+</button>
      `;
            pinsContainer.appendChild(el);
        });
    } catch (e) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø–∏–Ω–æ–≤:', e);
        pinsContainer.innerHTML = `<p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–∏–Ω—ã üò¢</p>`;
    }
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–∏–Ω–∞ –≤ –¥–æ—Å–∫—É
document.addEventListener('click', (e) => {
    if (e.target.classList.contains('circle-btn')) {
        const boardName = boardSelect.value;
        if (!boardName) return alert('–°–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –¥–æ—Å–∫—É!');

        const pinEl = e.target.closest('.pin');
        const pin = {
            id: e.target.dataset.id,
            title: pinEl.querySelector('.pin-description').textContent,
            image: pinEl.querySelector('img').src
        };
        addPinToBoard(boardName, pin);
        alert(`–ü–∏–Ω –¥–æ–±–∞–≤–ª–µ–Ω –≤ –¥–æ—Å–∫—É "${boardName}"`);
    }
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
renderBoardOptions();
loadPins();
